<?xml version="1.0" encoding="UTF-8"?><editableResource createdTimestamp="1437838499988" createdUser="NL052772" id="-2eedf4e2:14ec5cef4c5:-7d61" type="test_resource" updatedTimestamp="1437839855049" updatedUser="NL052772" version="1.1">
   <loggingConfiguration debug="false" writeStubEventsToDB="false"/>
   <resourceConfig description="" name="">
      <testTree>
         <editableResource id="-2eedf4e2:14ec5cef4c5:-7aeb" selfDescribing="The comment actions enable you to add notes." type="comment_action" version="1.0">
            <loggingConfiguration debug="false" writeStubEventsToDB="false"/>
            <resourceConfig description="This Test shows two things:&#13;&#10;- How you can iterate across all Tags&#13;&#10;- How to copy a Tag-Tree (here all /INPUT/ tags are copied to corresponding /OUTPUT/" html="false" name="This Test shows two things:&#13;&#10;- How you can iterate across all Tags&#13;&#10;- How to copy a Tag-Tree (here all /INPUT/ tags are copied to corresponding /OUTPUT/"/>
         </editableResource>
         <editableResource id="-2eedf4e2:14ec5cef4c5:-7b79" selfDescribing="Execute a function and optionally tag the results. Use predefined functions, custom plug-ins and tagged data." type="function_action" version="1.0">
            <loggingConfiguration debug="false" writeStubEventsToDB="false"/>
            <resourceConfig description="" eval_type="Mozilla Rhino" function="print(&quot;Reset OUTPUT/TRANSACTION to empty strings\n&quot;);&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/IBAN&quot;]=&quot;&quot;;&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/NAME&quot;]=&quot;&quot;;&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/VALUE&quot;]=&quot;&quot;;" name="Run &quot;print(&quot;Reset OUTPUT/TRANSACTION to empty strings\n&quot;);&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/IBAN&quot;]=&quot;&quot;;&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/NAME&quot;]=&quot;&quot;;&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/VALUE&quot;]=&quot;&quot;;&quot; (2)"/>
         </editableResource>
         <editableResource id="-73c51253:14ead04da92:-7df1" selfDescribing="Execute a function and optionally tag the results. Use predefined functions, custom plug-ins and tagged data." type="function_action" version="1.0">
            <loggingConfiguration debug="false" writeStubEventsToDB="false"/>
            <resourceConfig description="Run &quot;for (var prop in tags) {&#13;   if (tags.hasOwnProperty(prop)) { &#13;   // or if (Object.prototype.hasOwnProperty.call(obj,prop)) for safety...&#13;     print(&quot;prop: &quot; + prop + &quot; value: &quot; + tags[prop]+&quot;\n&quot;);&#13;   }&#13; }&quot;" eval_type="Mozilla Rhino" function="print(&quot;copyTags - Based on String\n&quot;);&#13;&#10;var list=tags.toString();&#13;&#10;list=list.substring(1,list.length-1);&#13;&#10;var k_source=list.split(&quot;,&quot;);&#13;&#10;&#13;&#10;function copyTAGS(source,target) {&#13;&#10;&#9;print(&quot;INPUT: &quot;+ source +&quot;\n&quot;);&#13;&#10;&#9;print(&quot;OUTPUT: &quot;+ target +&quot;\n&quot;);&#13;&#10;&#9;for (var i=0; i&lt;k_source.length;i++) {&#13;&#10;&#9;&#9;//print (i+&quot; &quot; +k_source[i]+&quot;\n&quot;);&#13;&#10;&#9;&#9;var keyw_source=k_source[i].substring(0,k_source[i].indexOf(&quot;=&quot;)).trim();&#13;&#10;&#9;&#9;var value=k_source[i].substring(k_source[i].indexOf(&quot;=&quot;)+1);&#13;&#10;&#9;&#9;// Check if keyw contains source ...&#13;&#10;&#9;&#9;if (keyw_source.indexOf(source)!=-1) {&#13;&#10;&#9;&#9;&#9;// HIT!!&#13;&#10;&#9;&#9;&#9;var keyw_target=keyw_source.replace(source,target).trim();&#13;&#10;&#9;&#9;&#9;tags[keyw_target]=tags[keyw_source];&#13;&#10;&#9;&#9;&#9;print(&quot;keyw_source: &quot; + keyw_source +&quot;\n&quot;);&#13;&#10;&#9;&#9;&#9;print(&quot;keyw_target: &quot; + keyw_target +&quot;\n&quot;);&#13;&#10;&#9;&#9;&#9;print(&quot;value: &quot; + value +&quot;\n&quot;);&#13;&#10;&#9;&#9;} &#13;&#10;&#9;}&#13;&#10;&#13;&#10;}&#13;&#10;copyTAGS(&quot;INPUT&quot;,&quot;OUTPUT&quot;);" name="Run &quot;print(&quot;copyTags - Based on String\n&quot;);&#13;&#10;var list=tags.toString();&#13;&#10;list=list.substring(1,list.length-1);&#13;&#10;var k_source=list.split(&quot;,&quot;);&#13;&#10;&#13;&#10;function copyTAGS(source,target) {&#13;&#10;&#9;print(&quot;INPUT: &quot;+ source +&quot;\n&quot;);&#13;&#10;&#9;print(&quot;OUTPUT: &quot;+ target +&quot;\n&quot;);&#13;&#10;&#9;for (var i=0; i&lt;k_source.length;i++) {&#13;&#10;&#9;&#9;//print (i+&quot; &quot; +k_source[i]+&quot;\n&quot;);&#13;&#10;&#9;&#9;var keyw_source=k_source[i].substring(0,k_source[i].indexOf(&quot;=&quot;)).trim();&#13;&#10;&#9;&#9;var value=k_source[i].substring(k_source[i].indexOf(&quot;=&quot;)+1);&#13;&#10;&#9;&#9;// Check if keyw contains source ...&#13;&#10;&#9;&#9;if (keyw_source.indexOf(source)!=-1) {&#13;&#10;&#9;&#9;&#9;// HIT!!&#13;&#10;&#9;&#9;&#9;var keyw_target=keyw_source.replace(source,target).trim();&#13;&#10;&#9;&#9;&#9;tags[keyw_target]=tags[keyw_source];&#13;&#10;&#9;&#9;&#9;print(&quot;keyw_source: &quot; + keyw_source +&quot;\n&quot;);&#13;&#10;&#9;&#9;&#9;print(&quot;keyw_target: &quot; + keyw_target +&quot;\n&quot;);&#13;&#10;&#9;&#9;&#9;print(&quot;value: &quot; + value +&quot;\n&quot;);&#13;&#10;&#9;&#9;} &#13;&#10;&#9;}&#13;&#10;&#13;&#10;}&#13;&#10;copyTAGS(&quot;INPUT&quot;,&quot;OUTPUT&quot;);&quot;"/>
         </editableResource>
         <editableResource id="-2eedf4e2:14ec5cef4c5:-7b54" selfDescribing="The log actions enables you to output messages to console and a logging file." type="logging_action" version="1.0">
            <loggingConfiguration debug="false" writeStubEventsToDB="false"/>
            <resourceConfig append="true" description="" flush="true" loggingMessage="OUTPUT/TRANSACTION/IBAN = %%OUTPUT/TRANSACTION/IBAN%%&#13;&#10;OUTPUT/TRANSACTION/NAME = %%OUTPUT/TRANSACTION/NAME%%&#13;&#10;OUTPUT/TRANSACTION/VALUE = %%OUTPUT/TRANSACTION/VALUE%%" name="OUTPUT/TRANSACTION/IBAN = %%OUTPUT/TRANSACTION/IBAN%% (2)" outputFile="" role="0"/>
         </editableResource>
         <editableResource id="-2eedf4e2:14ec5cef4c5:-7b9c" selfDescribing="Execute a function and optionally tag the results. Use predefined functions, custom plug-ins and tagged data." type="function_action" version="1.0">
            <loggingConfiguration debug="false" writeStubEventsToDB="false"/>
            <resourceConfig description="" eval_type="Mozilla Rhino" function="print(&quot;Reset OUTPUT/TRANSACTION to empty strings\n&quot;);&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/IBAN&quot;]=&quot;&quot;;&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/NAME&quot;]=&quot;&quot;;&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/VALUE&quot;]=&quot;&quot;;" name="Run &quot;print(&quot;Reset OUTPUT/TRANSACTION to empty strings\n&quot;);&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/IBAN&quot;]=&quot;&quot;;&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/NAME&quot;]=&quot;&quot;;&#13;&#10;tags[&quot;OUTPUT/TRANSACTION/VALUE&quot;]=&quot;&quot;;&quot;"/>
         </editableResource>
         <editableResource id="-2eedf4e2:14ec5cef4c5:-7e2f" selfDescribing="Execute a function and optionally tag the results. Use predefined functions, custom plug-ins and tagged data." type="function_action" version="1.0">
            <loggingConfiguration debug="false" writeStubEventsToDB="false"/>
            <resourceConfig description="" eval_type="Mozilla Rhino" function="print(&quot;copyTags - Based on TreeMap\n&quot;);&#13;&#10; // Sort into a new map&#13;&#10;var sortedTags = new java.util.TreeMap(tags);&#13;&#10;// Get a map of names&#13;&#10;var completeList = sortedTags.keySet();&#13;&#10;// Create an iterator object&#13;&#10;var iter = completeList.iterator();&#13;&#10;&#13;&#10;function copyTAGS2(source,target) {&#13;&#10;&#9;print(&quot;copyTAGS2 from\n&quot;);&#13;&#10;&#9;print(&quot;INPUT: &quot;+ source +&quot;\n&quot;);&#13;&#10;&#9;print(&quot;OUTPUT: &quot;+ target +&quot;\n&quot;);&#13;&#10;&#9;while(iter.hasNext()){&#13;&#10;    &#9;&#9;// Get the next name&#13;&#10;    &#9;&#9;//var name = iter.next();&#13;&#10;    &#9;&#9;//print(name + &quot; --&gt;&gt; &quot;);&#13;&#10;    &#9;&#9;//print(sortedTags.get(name) + &quot;\n&quot;);&#13;&#10;&#9;&#9;var keyw_source=iter.next();&#13;&#10;&#9;&#9;var value=sortedTags.get(keyw_source);&#13;&#10;&#9;&#9;// Check if keyw contains source ...&#13;&#10;&#9;&#9;if (keyw_source.indexOf(source)!=-1) {&#13;&#10;&#9;&#9;&#9;// HIT!!&#13;&#10;&#9;&#9;&#9;var keyw_target=keyw_source.replace(source,target).trim();&#13;&#10;&#9;&#9;&#9;tags[keyw_target]=tags[keyw_source];&#13;&#10;&#9;&#9;&#9;print(&quot;keyw_source: &quot; + keyw_source +&quot;\n&quot;);&#13;&#10;&#9;&#9;&#9;print(&quot;keyw_target: &quot; + keyw_target +&quot;\n&quot;);&#13;&#10;&#9;&#9;&#9;print(&quot;copy value: &quot; + value +&quot;\n&quot;);&#13;&#10;&#9;&#9;} &#13;&#10;&#9;}&#13;&#10;}&#13;&#10;copyTAGS2(&quot;INPUT&quot;,&quot;OUTPUT&quot;);" name="Run &quot;print(&quot;copyTags - Based on TreeMap\n&quot;);&#13;&#10; // Sort into a new map&#13;&#10;var sortedTags = new java.util.TreeMap(tags);&#13;&#10;// Get a map of names&#13;&#10;var completeList = sortedTags.keySet();&#13;&#10;// Create an iterator object&#13;&#10;var iter = completeList.iterator();&#13;&#10;&#13;&#10;function copyTAGS2(source,target) {&#13;&#10;&#9;print(&quot;copyTAGS2 from\n&quot;);&#13;&#10;&#9;print(&quot;INPUT: &quot;+ source +&quot;\n&quot;);&#13;&#10;&#9;print(&quot;OUTPUT: &quot;+ target +&quot;\n&quot;);&#13;&#10;&#9;while(iter.hasNext()){&#13;&#10;    &#9;&#9;// Get the next name&#13;&#10;    &#9;&#9;//var name = iter.next();&#13;&#10;    &#9;&#9;//print(name + &quot; --&gt;&gt; &quot;);&#13;&#10;    &#9;&#9;//print(sortedTags.get(name) + &quot;\n&quot;);&#13;&#10;&#9;&#9;var keyw_source=iter.next();&#13;&#10;&#9;&#9;var value=sortedTags.get(keyw_source);&#13;&#10;&#9;&#9;// Check if keyw contains source ...&#13;&#10;&#9;&#9;if (keyw_source.indexOf(source)!=-1) {&#13;&#10;&#9;&#9;&#9;// HIT!!&#13;&#10;&#9;&#9;&#9;var keyw_target=keyw_source.replace(source,target).trim();&#13;&#10;&#9;&#9;&#9;tags[keyw_target]=tags[keyw_source];&#13;&#10;&#9;&#9;&#9;print(&quot;keyw_source: &quot; + keyw_source +&quot;\n&quot;);&#13;&#10;&#9;&#9;&#9;print(&quot;keyw_target: &quot; + keyw_target +&quot;\n&quot;);&#13;&#10;&#9;&#9;&#9;print(&quot;copy value: &quot; + value +&quot;\n&quot;);&#13;&#10;&#9;&#9;} &#13;&#10;&#9;}&#13;&#10;}&#13;&#10;copyTAGS2(&quot;INPUT&quot;,&quot;OUTPUT&quot;);&quot;"/>
         </editableResource>
         <editableResource id="-2eedf4e2:14ec5cef4c5:-7b57" selfDescribing="The log actions enables you to output messages to console and a logging file." type="logging_action" version="1.0">
            <loggingConfiguration debug="false" writeStubEventsToDB="false"/>
            <resourceConfig append="true" description="" flush="true" loggingMessage="OUTPUT/TRANSACTION/IBAN = %%OUTPUT/TRANSACTION/IBAN%%&#13;&#10;OUTPUT/TRANSACTION/NAME = %%OUTPUT/TRANSACTION/NAME%%&#13;&#10;OUTPUT/TRANSACTION/VALUE = %%OUTPUT/TRANSACTION/VALUE%%" name="OUTPUT/TRANSACTION/IBAN = %%OUTPUT/TRANSACTION/IBAN%% (2)" outputFile="" role="0"/>
         </editableResource>
      </testTree>
      <tagDataStore inputMode="NONE" outputMode="NONE">
         <tag defaultValue="" description="" name="OUTPUT/TRANSACTION/VALUE"/>
         <tag defaultValue="" description="" name="number"/>
         <tag defaultValue="777-888-999" description="" name="INPUT/TRANSACTION/IBAN"/>
         <tag defaultValue="SMITH" description="" name="INPUT/TRANSACTION/NAME"/>
         <tag defaultValue="Data" description="" name="ZZZZSomething"/>
         <tag defaultValue="" description="" name="Street"/>
         <tag defaultValue="" description="" name="OUTPUT/TRANSACTION/NAME"/>
         <tag defaultValue="" description="" name="OUTPUT/TRANSACTION/IBAN"/>
         <tag defaultValue="10" description="" name="INPUT/TRANSACTION/VALUE"/>
         <tag defaultValue="" description="" name="list"/>
         <tag defaultValue="" description="" name="City"/>
         <tag defaultValue="" description="" name="Name"/>
      </tagDataStore>
   </resourceConfig>
</editableResource>
